<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <Style TargetType="Button" x:Key="WatchlistBtn">
        <Setter Property="Background" Value="#2c2c2c"/>
        <Setter Property="Foreground" Value="#5799EF"/>
        <Setter Property="FontWeight" Value="DemiBold"/>
        <Setter Property="Width" Value="150"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border"
                            CornerRadius="20,0,0,20"
                            BorderThickness="1"
                            Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" 
                                        VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button" x:Key="WatchlistToggleBtn" BasedOn="{StaticResource WatchlistBtn}">
        <Setter Property="Content" Value="+ Add to Watchlist"/>
        <Style.Triggers>
            <!-- Normal state (Add to Watchlist) -->
            <DataTrigger Binding="{Binding IsInWatchlist}" Value="False">
                <Setter Property="Content" Value="+ Add to Watchlist"/>
                <Setter Property="Background" Value="#2c2c2c"/>
                <Setter Property="Foreground" Value="#5799EF"/>
            </DataTrigger>

            <!-- Watchlist state (Remove from Watchlist) -->
            <DataTrigger Binding="{Binding IsInWatchlist}" Value="True">
                <Setter Property="Content" Value="✔ In Watchlist"/>
                <Setter Property="Background" Value="#FF3333"/>
                <Setter Property="Foreground" Value="White"/>
            </DataTrigger>

            <!-- Hover effects for both states -->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsInWatchlist}" Value="True"/>
                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="Background" Value="#FF5555"/>
                <!-- different red on hover -->
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsInWatchlist}" Value="False"/>
                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="Background" Value="#30353c"/>
                <!-- different gray on hover -->
            </MultiDataTrigger>
        </Style.Triggers>
    </Style>
    
    <Style TargetType="Button" x:Key="CustomListBtn">
        <Setter Property="Content" Value="˅"/>
        <Setter Property="Background" Value="#2c2c2c"/>
        <Setter Property="Foreground" Value="#5799EF"/>
        <Setter Property="FontWeight" Value="DemiBold"/>
        <Setter Property="Width" Value="40"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border"
                    CornerRadius="0,20,20,0"
                    BorderThickness="1"
                    Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" 
                                VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsInWatchlist}" Value="False">
                <Setter Property="Background" Value="#2c2c2c"/>
                <Setter Property="Foreground" Value="#5799EF"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding IsInWatchlist}" Value="True">
                <Setter Property="Background" Value="#FF3333"/>
                <Setter Property="Foreground" Value="White"/>
            </DataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsInWatchlist}" Value="True"/>
                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="Background" Value="#FF5555"/>
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsInWatchlist}" Value="False"/>
                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="Background" Value="#30353c"/>
            </MultiDataTrigger>
        </Style.Triggers>
    </Style>
    
</ResourceDictionary>